---
# Copyright (c) 2020 Contributors to Smart-Data-Models
# see https://github.com/smart-data-models/dataModel.Transportation

TrafficFlowObserved:
  required:
    - id
    - type
    - dateObserved
  allOf:
    - $ref: >-
        https://smart-data-models.github.io/data-models/ngsi-ld.yaml#/Common
  type: object
  description: TrafficFlowObserved
  properties:
    address:
      $ref: >-
        https://smart-data-models.github.io/data-models/schema.org.yaml#/address
    alternateName:
      $ref: >-
        https://smart-data-models.github.io/data-models/schema.org.yaml#/alternateName
    areaServed:
      $ref: >-
        https://smart-data-models.github.io/data-models/schema.org.yaml#/areaServed
    averageGapDistance:
      x-ngsi:
        type: Property
      type: number
      description: ' Average gap distance between consecutive vehicles.'
    averageHeadwayTime:
      x-ngsi:
        type: Property
      type: number
      description: 'Average headway time. Headaway time is the time ellapsed between two consecutive vehicles.'
    averageVehicleLength:
      x-ngsi:
        type: Property
      type: number
      description: 'Average length of the vehicles transiting during the observation period'
    averageVehicleSpeed:
      x-ngsi:
        type: Property
      type: number
      description: 'Average speed of the vehicles transiting during the observation period.'
    congested:
      x-ngsi:
        type: Property
      type: boolean
      description: 'Flags whether there was a traffic congestion during the observation period in the referred lane. The absence of this attribute means no traffic congestion.'
    dataProvider:
      $ref: >-
        https://smart-data-models.github.io/data-models/fiware-terms.yaml#/dataProvider
    dateObserved:
      x-ngsi:
        type: Property
        model: 'https://schema.org/Text'
      type: string
    description: |
       The date and time of this observation in ISO8601 UTC format. It can be represented by an specific time instant or by an ISO8601 interval.
       As a workaround for the lack of support of Orion Context Broker for datetime intervals, it can be used two separate attributes:
       dateObservedFrom, dateObservedTo.
    dateObservedFrom:
      x-ngsi:
        type: Property
        model: 'https://schema.org/DateTime'
      type: string
      description: 'Observation period start date and time. See dateObserved.'
      format: date-time
    dateObservedTo:
      x-ngsi:
        type: Property
        model: 'https://schema.org/DateTime'
      type: string
      description: 'Observation period end date and time. See dateObserved.'
      format: date-time
    description:
      $ref: >-
        https://smart-data-models.github.io/data-models/ngsi-ld.yaml#/description
    intensity:
      x-ngsi:
        type: Property
      type: number
      description: ' Total number of vehicles detected during this observation period.'
    laneDirection:
      x-ngsi:
        type: Property
        model: 'https://schema.org/Text'
      type: string
    description: |
       Usual direction of travel in the lane referred by this observation. 
       This attribute is useful when the observation is not referencing any road segment, 
       allowing to know the direction of travel of the traffic flow observed.
    laneId:
      x-ngsi:
        type: Property
        model: 'https://schema.org/Integer'
      type: integer
      description: 'Lane identifier.'
      format: int32
    location:
      $ref: >-
        https://smart-data-models.github.io/data-models/ngsi-ld.yaml#/location
    name:
      $ref: >-
        https://smart-data-models.github.io/data-models/ngsi-ld.yaml#/name
    occupancy:
      x-ngsi:
        type: Property
      type: number
      description: ' Fraction of the observation time where a vehicle has been occupying the observed laned.'
    owner:
      $ref: >-
        https://smart-data-models.github.io/data-models/fiware-terms.yaml#/owner
    refRoadSegment:
      x-ngsi:
        type: Relationship
        model: 'https://schema.org/URL'
      type: string
      description: 'Concerned road segment on which the observation has been mede.'
      format: uri
    reversedLane:
      x-ngsi:
        type: Property
      type: boolean
      description: ' Flags whether traffic in the lane was reversed during the observation period. The absence of this attribute means no lane reversion.'
    source:
      $ref: >-
        https://smart-data-models.github.io/data-models/fiware-terms.yaml#/source
    vehicleSubType:
      x-ngsi:
        type: Property
        model: 'https://schema.org/Text'
      type: string
      description: 'allows to specify a sub type of vehicleType , eg if the vehicleType is set to Lorry the vehicleSubType may be OGV1 or OGV2 to convey more information about the exact type of vehicle'
    vehicleType:
      x-ngsi:
        type: Property
        model: 'https://schema.org/Text'
      type: string
      description: 'Type of vehicle from the point of view of its structural characteristics.'
